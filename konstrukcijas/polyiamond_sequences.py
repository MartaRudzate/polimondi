import sys

sys.path.insert(0, '../../oo-backtracking')

from point_tg import *

class PolSeq:

    seq_4_3_i = {
        15: [[0, 15], [14, -7], [13, 6.5], [12, -6], [0, -11], [-10, 5], [-9, -4.5], [-8, 4], [0, -7], [-6, 3], [-5, -2.5], [-4, 2], [0, 3], [2, -1], [1, 0.5]],
        19: [[0, 19], [18, -9], [17, 8.5], [16, -8], [15, 7.5], [0, -14], [-13, 6.5], [-12, -6], [-11, 5.5], [-10, -5], [0, -9], [-8, 4], [-7, -3.5], [-6, 3], [-5, -2.5], [0, 4], [3, -1.5], [2, 1], [1, -0.5]],
        23: [[0, 23], [22, -11], [21, 10.5], [20, -10], [19, 9.5], [18, -9], [0, -17], [-16, 8], [-15, -7.5], [-14, 7], [-13, -6.5], [-12, 6], [0, -11], [-10, 5], [-9, -4.5], [-8, 4], [-7, -3.5], [-6, 3], [0, 5], [4, -2], [3, 1.5], [2, -1], [1, 0.5]],
        27: [[0, 27], [26, -13], [25, 12.5], [24, -12], [23, 11.5], [22, -11], [21, 10.5], [0, -20], [-19, 9.5], [-18, -9], [-17, 8.5], [-16, -8], [-15, 7.5], [-14, -7], [0, -13], [-12, 6], [-11, -5.5], [-10, 5], [-9, -4.5], [-8, 4], [-7, -3.5], [0, 6], [5, -2.5], [4, 2], [3, -1.5], [2, 1], [1, -0.5]],
        31: [[0, 31], [30, -15], [29, 14.5], [28, -14], [27, 13.5], [26, -13], [25, 12.5], [24, -12], [0, -23], [-22, 11], [-21, -10.5], [-20, 10], [-19, -9.5], [-18, 9], [-17, -8.5], [-16, 8], [0, -15],[ -14, 7], [-13, -6.5], [-12, 6], [-11, -5.5], [-10, 5], [-9, -4.5], [-8, 4], [0, 7], [6, -3], [5, 2.5], [4, -2], [3, 1.5], [2, -1], [1, 0.5]],  
    }


    seq_4_3_ii = {
        15: [[0, 15], [14, 7], [13, -6.5], [12, 6], [0, -11], [-10, -5], [-9, 4.5], [-8, -4], [0, -7], [-6, -3], [-5, 2.5], [-4, -2], [0, 3], [2, 1], [1, -0.5]],
        19: [[0, 19], [18, 9], [17, -8.5], [16, 8], [15, -7.5], [0, -14], [-13, -6.5], [-12, 6], [-11, -5.5], [-10, 5], [0, -9], [-8, -4], [-7, 3.5], [-6, -3], [-5, 2.5], [0, 4], [3, 1.5], [2, -1], [1, 0.5]],
        23: [[0, 23], [22, 11], [21, -10.5], [20, 10], [19, -9.5], [18,9], [0, -17], [-16, -8], [-15, 7.5], [-14, -7], [-13, 6.5], [-12, -6], [0, -11], [-10, -5], [-9, 4.5], [-8, -4], [-7, 3.5], [-6, -3], [0, 5], [4, 2], [3, -1.5], [2, 1], [1, -0.5]],
        27: [[0, 27], [26, 13], [25, -12.5], [24, 12], [23, -11.5], [22, 11], [21, -10.5], [0, -20], [-19, -9.5], [-18, 9], [-17, -8.5], [-16, 8], [-15, -7.5], [-14, 7], [0, -13], [-12, -6], [-11, 5.5], [-10, -5], [-9, 4.5], [-8, -4], [-7, 3.5], [0, 6], [5, 2.5], [4, -2], [3, 1.5], [2, -1], [1, 0.5]],
        31: [[0, 31], [30, 15], [29, -14.5], [28, 14], [27, -13.5], [26, 13], [25, -12.5], [24, 12], [0, -23], [-22, -11], [-21, 10.5], [-20, -10], [-19, 9.5], [-18, -9], [-17, 8.5], [-16, -8], [0, -15],[ -14, -7], [-13, 6.5], [-12, -6], [-11, 5.5], [-10, -5], [-9, 4.5], [-8, -4], [0, 7], [6, 3], [5, -2.5], [4, 2], [3, -1.5], [2, 1], [1, -0.5]],  
    }

    @staticmethod
    def get_points(L):
        result = set()
        current = PointTg(0,0,0)
        result.add(PointTg(0,0,0))
        return result
        

    @staticmethod
    def to_letters(L): 
        result = []
        for (x,y) in L:
            if x == 0 and y > 0: 
                result.append('A')
            elif x > 0 and y > 0: 
                result.append('B')
            elif x > 0 and y < 0: 
                result.append('C')
            elif x == 0 and y < 0:
                result.append('D')
            elif x < 0 and y < 0:
                result.append('E')
            else: 
                result.append('F')
        return result


def main(): 
    print(PolSeq.seq_4_3_i[15])
    aa = PolSeq.to_letters(PolSeq.seq_4_3_i[15])
    PolSeq.get_points()
    print(aa)



if __name__ == '__main__':
    main()
